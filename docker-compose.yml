version: "3"
services: 
  adbd:
    image: sorccu/adb
    container_name: adbd
    restart: always
    ports:
      - "5037:5037"
    volumes:
      - /dev/bus/usb:/dev/bus/usb
    privileged: true
    network_mode: "host"
  rethinkdb:
    image: rethinkdb
    restart: always
    ports:
      - "8080:8080"
      - "28015:28015"
      - "29015:29015"
    volumes:
      - "/mnt/rethinkdb:/data"
    network_mode: "host"
    command: "rethinkdb --bind all --cache-size 2048"
  stf-local:
    image: openstf/stf
    restart: always
    depends_on:
      - rethinkdb
      - adbd
    ports:
      - "7100:7100"
      - "7110:7110"
      - "7120:7120"
      - "7400-7500:7400-7500"
    network_mode: "host"
    command: stf local --public-ip 192.168.10.176
  redis:
    image: redis
    restart: always
    ports: 
        - "6379:6379"
    container_name: redisdb
    volumes:
      - /mnt/redisdb:/data
    networks:
      - mobilephone
  mongo:
    image: mongo
    restart: always
    ports: 
        - "27017:27017"
    container_name: mongodb
    volumes:
      - /mnt/mongodbData:/data/db
    networks:
      - mobilephone
  mysql:
    image: mysql
    restart: always
    ports: 
        - "3306:3306"
    container_name: mysqldb
    volumes:
      - /mnt/mysqldata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - mobilephone
  log-elasticsearch:
    image: "elasticsearch:2"
    command: "elasticsearch -Des.cluster.name='graylog'"
    volumes:
      - /etc/localtime:/etc/localtime
      - /etc/timezone:/etc/timezone
      - /mnt/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - mobilephone
  graylog:
    image: graylog2/server:2.1.1-1
    volumes:
      - /etc/localtime:/etc/localtime
      - /etc/timezone:/etc/timezone
      - /mnt/graylog/data/journal:/usr/share/graylog/data/journal
      - /mnt/graylog/config:/usr/share/graylog/data/config
    environment:
      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      #这个地址需要配置成你要访问的地址，比如你的容器部署在192.168.1.2，你需要通过192.168.1.2来访问服务的话，你需要配置成http://192.168.1.2:9000/api，否则访问会报错
      GRAYLOG_WEB_ENDPOINT_URI: http://192.168.10.176:9000/api
    depends_on:
      - log-elasticsearch
      - mongo
    ports:
      #web界面端口
      - "9000:9000"
      #gelf收集日志的端口，如果需要添加graylog收集器，可以新增暴露出来的端口
      - "12201:12201/udp"
      - "1514:1514/udp"
    networks:
      - mobilephone
  nodejsqueue:
    build: nodejsqueue/
    container_name: nodejsqueue
    restart: always
    ports: 
        - "3000:3000"
    volumes:
      - /home/tymx/Documents/DockerContainer/nodejsqueue:/usr/local/nodejsqueue
      - /mnt/upload_files:/usr/local/nodejsqueue/redisService/uploads
    networks:
      - mobilephone
    depends_on:
      - redis
      - mongo
  mitmproxy:
    build: mitmproxy/
    restart: always
    ports: 
      - "8088:8080"
      - "8081:8081"
    expose:
      - "8080"
      - "8081"
    volumes:
      - /home/tymx/Documents/DockerContainer/mitmproxy/crt:/root/.mitmproxy
      - /home/tymx/Documents/DockerContainer/ECOServer/mitmproxyServer:/tmp/script
    command: mitmweb --web-iface 0.0.0.0 --ssl-insecure -s /tmp/script/AddRule.py
    depends_on:
      - redis
    networks:
      - mobilephone
  anyproxy:
    build: anyproxy4_x/
    restart: always
    ports: 
      - "7001:8001"
      - "7002:8002"
      - "7013:8013"
    expose:
      - "8001"
      - "8002"
      - "8013"
    volumes:
      - /home/tymx/Documents/DockerContainer/anyproxy4_x:/usr/local/anyproxy
    command: anyproxy --intercept --rule /usr/local/anyproxy/rulefiles/rule.js
    depends_on:
      - nodejsqueue
    networks:
      - mobilephone
  ecologicalmonitor:
    build: monkeyrunner/
    restart: always
    volumes:
      - /home/tymx/Documents/DockerContainer/monkeyrunner/ecological:/usr/local/monkeyrunner/ecological
    depends_on:
      - redis
      - mongo
      - adbd
    networks:
      - mobilephone
  imagedownload:
    build: ECOServer/
    restart: always
    volumes:
      - /home/tymx/Documents/DockerContainer/ECOServer:/usr/local/ECOServer
      - /mnt/download_media:/usr/local/ECOServer/files
      - /mnt/db/logs:/usr/local/ECOServer/logs
    command: python /usr/local/ECOServer/media_download_server.py
    depends_on:
      - redis
      - mongo
    networks:
      - mobilephone
  ecoserver:
    build: ECOServer/
    restart: always
    volumes:
      - /home/tymx/Documents/DockerContainer/ECOServer:/usr/local/ECOServer
    depends_on:
      - redis
      - mongo
      - mysql
      - graylog
    networks:
      - mobilephone
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://graylog:12201"
        tag: ecoserver
  ocrserver:
    build: ECOServer/
    restart: always
    volumes:
      - /home/tymx/Documents/DockerContainer/ECOServer:/usr/local/ECOServer
    command: python /usr/local/ECOServer/screencap_match_main.py
    depends_on:
      - redis
      - mongo
      - mysql
    networks:
      - mobilephone
  dockerui:
    image: abh1nav/dockerui:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports: 
      - "19000:9000"
    privileged: true
    depends_on:
      - redis
      - mongo
      - mysql
    networks:
      - mobilephone
networks:
  mobilephone:
    driver: bridge

